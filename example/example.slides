// this is a comment

// text is left-aligned by default
// default background color is 0xFFFFFFFF
// default text color is 0x000000FF
// default text size is 40
// default font is serif
// default slide aspect ratio is 16/9
// default right and left spacing is 10
// by default black bars are shown at the edges of slides if the aspect ratios don't match
// by default there are no headers and footers
// default depth layer is 5 (the middle one)

// The text size is always relative to a 1080p screen (height is referenced even when the aspect ratio is different). This is done to retain spacing and scaling when displaying on larger (or smaller) screens. When dumping slides to file this reference size is always used for the output.

// This defines a global aspect ratio for all the slides in the slides show (in this case 3:2).
aspect_ratio 3 2

// If you want the slide show to not have black bars on the edges when the window size doesnt match the aspect ratio of the slides, you can set this to false:
//black_bars false

// This text section defines a multiline text segment with the current text size.
text
This is a test slide that displays text and an image with some spacing in between.
text

// insert a number of line spacings
space 1

// include an image (path is relative to the slide show file)
image test.png

// Inserting images, spacings, and text creates a new context section. You can define formatting etc. for them before inserting the content. Inserted content always uses the last value defined for a formatting option.

// If you dont want the footer or header to be used on a slide, you can use these keywords to exclude them. This might be useful for cover sheets.
no_footer
no_header



slide // declare a new slide like this

// settings from previous slides will be kept

// set the background color for the entire slide
bg 0x2C2E34FF

font sans_serif // set the font

// set the text color
text_color 0xFC5D7CFF

// define the text size (this also works before any content is defined because there is no previous content)
text_size 50


text

This is a second test slide with formatted text and another image.
Text segments can be as long as you want.

Empty lines are respected.

text


// All the formatting parameters can be re-defined multiple times per slide for different sections.
// Every time you declare some content to be inserted (like text or images) the formatting previously defined is used.

center // set the content alignment

// More complicated paths are resolved. You can scale images by a factor if you include it afterwards.
image ./../example/test.png 0.5



slide

font sans_serif
text_size 40
left
line_spacing 1.0
bg 0x000000FF
text_color 0xFFFFFFFF
// set the line spacing factor for the section formatting
line_spacing 1.8

text
This is a very long line that demonstrates automatic line breaking for all the formatting cases. It is longer than the width of one slide. The line breaking happens between full words only. Block text is not currently supported.
A line break works as you would think.
text

text
This is another text segment that should be positioned right under the previous text without additional space in between.
text



slide fallthrough

// This is a slide that implicitely contains all the content from the previous one to enable basic animations.
// When dumping the slides to images, these slides are compressed into one.
text
This is a text line that "animated" using a fallthrough slide.
text



slide

font monospace
line_spacing 1.0

text
// indented code works too
const std = @import("std");

pub fn main() !void {
    std.debug.print("Hamburger\n");
}
text

space 1
left_space 50 // this alters the left spacing for the slide per section

// You can add colored quads by specifying color, width and height.
quad 0xFF0000FF 200 300



slide fallthrough

layer 4 // define the current depth layer to render to in range [1, 10]
space 10
left_space 150
quad 0x0000FFFF 800 300



// You can define an optional unique header or footer just like a slide at the end of the file. It will be displayed on every slide it's not excluded from. Each definition ends on a new slide/header/footer declaration. They can't contain format specifiers that influence entire slides. Header definitions must precede footer definitions. All formatting specifications are reset once you start defining headers or footers, but they do carry over between the two.

header
font sans_serif
text_color 0x00FF00FF
text_size 30
text
This is a header.
text
space 1

footer
right
space 1
text
This is a footer.
text
